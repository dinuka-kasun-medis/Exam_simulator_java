/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ijse.gdse37.genius.view.student;

import edu.ijse.gdse37.genius.connector.ServerConnector;
import edu.ijse.gdse37.genius_common.controllers.SubjectController;
import edu.ijse.gdse37.genius_common.controllers.UniteController;
import java.io.IOException;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import edu.ijse.gdse37.genius_common.model.Subject;
import edu.ijse.gdse37.genius_common.model.Unite;
import static edu.ijse.gdse37.genius.view.student.Student_Main_Window.mainWindowPanel;

/**
 *
 * @author Dinuka
 */
public class AnsweringQuestions extends javax.swing.JPanel {

    private static QuestionPanel questionPanel;

    /**
     * Creates new form AnsweringQuestions
     */
    public AnsweringQuestions() {
        initComponents();
        loadSubject();
        loadUnite();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        uniteCombo = new javax.swing.JComboBox<>();
        subjectCombo = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(null);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setText("Answering Questions");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(20, 0, 260, 40);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Select Unite :");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(150, 220, 160, 30);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Select your Subject :");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(150, 140, 160, 30);

        uniteCombo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jPanel2.add(uniteCombo);
        uniteCombo.setBounds(310, 220, 180, 30);

        subjectCombo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        subjectCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                subjectComboItemStateChanged(evt);
            }
        });
        jPanel2.add(subjectCombo);
        subjectCombo.setBounds(310, 140, 180, 30);

        jButton1.setBackground(new java.awt.Color(162, 234, 249));
        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton1.setText("Let's Start >>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);
        jButton1.setBounds(520, 350, 170, 40);

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel2.add(jSeparator1);
        jSeparator1.setBounds(770, 0, 30, 640);

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ijse/gdse37/genius/view/images/logo2New.png"))); // NOI18N
        jPanel2.add(jLabel4);
        jLabel4.setBounds(1130, 550, 190, 90);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ijse/gdse37/genius/view/images/newFace2.png"))); // NOI18N
        jPanel2.add(jLabel5);
        jLabel5.setBounds(770, 0, 550, 570);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ijse/gdse37/genius/view/images/Add2.png"))); // NOI18N
        jPanel2.add(jLabel3);
        jLabel3.setBounds(0, 0, 1320, 640);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1320, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1320, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String subject = subjectCombo.getSelectedItem().toString();
        String unite = uniteCombo.getSelectedItem().toString();
        questionPanel = new QuestionPanel(subject, unite);
        mainWindowPanel.removeAll();
        mainWindowPanel.add(questionPanel);
        mainWindowPanel.repaint();
        mainWindowPanel.revalidate();
        questionPanel.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void subjectComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_subjectComboItemStateChanged
        if (subjectCombo.getSelectedItem() != null) {
            loadUnite();
        }
    }//GEN-LAST:event_subjectComboItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox<String> subjectCombo;
    private javax.swing.JComboBox<String> uniteCombo;
    // End of variables declaration//GEN-END:variables

    /*Method for load subjects © Dinuka Kasun Medis*/
    private void loadSubject() {
        try {
            SubjectController subjectController = ServerConnector.getServerConnector().getSubjectController();
            ArrayList<Subject> subjectList = subjectController.getAllSubject();
            if (subjectList != null) {
                subjectCombo.removeAllItems();
                for (Subject subject : subjectList) {
                    subjectCombo.addItem(subject.getName());
                }
            }
        } catch (NotBoundException ex) {
            Logger.getLogger(AnsweringQuestions.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(AnsweringQuestions.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(AnsweringQuestions.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(AnsweringQuestions.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /*Method for load unites © Dinuka Kasun Medis*/
    private void loadUnite() {
        try {
            UniteController uniteController = ServerConnector.getServerConnector().getUniteController();
            SubjectController subjectController = ServerConnector.getServerConnector().getSubjectController();
            Subject subject = subjectController.searchSubject("subjectName", subjectCombo.getSelectedItem().toString());
            String subject_id = subject.getSubject_id();
            ArrayList<Unite> uniteList = uniteController.getAllUnite(subject_id);
            if (uniteList != null) {
                uniteCombo.removeAllItems();
                uniteCombo.addItem("All");
                for (Unite unite : uniteList) {
                    uniteCombo.addItem(unite.getName());
                }
            }
        } catch (NotBoundException ex) {
            Logger.getLogger(AnsweringQuestions.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(AnsweringQuestions.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(AnsweringQuestions.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(AnsweringQuestions.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}


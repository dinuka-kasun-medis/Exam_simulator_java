/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ijse.gdse37.genius.view.student;

import edu.ijse.gdse37.genius.connector.ServerConnector;
import edu.ijse.gdse37.genius.observerImpl.StudentObserverImpl;
import edu.ijse.gdse37.genius.view.other.Encription;
import edu.ijse.gdse37.genius_common.controllers.StudentController;
import edu.ijse.gdse37.genius_common.model.ExamAnswerSheet;
import java.io.IOException;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import edu.ijse.gdse37.genius_common.model.Student;
import java.awt.Toolkit;
import java.util.ArrayList;

/**
 *
 * @author Dinuka
 */
public class Student_Main_Window extends javax.swing.JFrame {

    private final AnsweringQuestions answeringQuestions=new AnsweringQuestions();
    private ExamPanel examPanel;

    /**
     *
     */
    public static String studentId;
    private StudentObserverImpl studentObserverImpl;
    
    /**
     * Creates new form Student_Main_Window
     */
    public Student_Main_Window() {
        initComponents();
        setTitle("Genius Exam Simulator © Dinuka Kasun Medis <_dinuka.kasunds@gmail.com_>");
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/edu/ijse/gdse37/genius/view/images/iconGenius.png")));
        setTime();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        mainWindowPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        passwordPanel = new javax.swing.JPanel();
        userIdTxt = new javax.swing.JTextField();
        passwordTxt = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        logBtn = new javax.swing.JButton();
        timeLbl = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        userNameLbl = new javax.swing.JLabel();
        dateLbl = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 204, 255));
        jPanel1.setLayout(null);

        mainWindowPanel.setBackground(new java.awt.Color(0, 0, 0));
        mainWindowPanel.setLayout(new java.awt.BorderLayout());

        jPanel2.setBackground(new java.awt.Color(233, 248, 248));
        jPanel2.setLayout(null);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ijse/gdse37/genius/view/images/LOGO.png"))); // NOI18N
        jPanel2.add(jLabel2);
        jLabel2.setBounds(0, 0, 1320, 640);

        mainWindowPanel.add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel1.add(mainWindowPanel);
        mainWindowPanel.setBounds(20, 80, 1320, 640);

        passwordPanel.setBackground(new java.awt.Color(102, 204, 255));
        passwordPanel.setLayout(null);
        passwordPanel.add(userIdTxt);
        userIdTxt.setBounds(20, 20, 210, 30);
        passwordPanel.add(passwordTxt);
        passwordTxt.setBounds(250, 20, 180, 30);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel4.setText("Password");
        passwordPanel.add(jLabel4);
        jLabel4.setBounds(250, 0, 100, 20);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel5.setText("Student User Id");
        passwordPanel.add(jLabel5);
        jLabel5.setBounds(20, 0, 100, 20);

        logBtn.setBackground(new java.awt.Color(204, 204, 204));
        logBtn.setText("Login");
        logBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logBtnActionPerformed(evt);
            }
        });
        passwordPanel.add(logBtn);
        logBtn.setBounds(443, 20, 90, 30);

        jPanel1.add(passwordPanel);
        passwordPanel.setBounds(810, 0, 550, 80);

        timeLbl.setFont(new java.awt.Font("Trajan Pro", 1, 18)); // NOI18N
        timeLbl.setText("10:25:30");
        jPanel1.add(timeLbl);
        timeLbl.setBounds(1230, 30, 90, 30);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setText("Hi,");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(1230, 10, 30, 20);

        userNameLbl.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        userNameLbl.setText("Admin");
        jPanel1.add(userNameLbl);
        userNameLbl.setBounds(1260, 10, 90, 20);

        dateLbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        dateLbl.setText("2016 November,10");
        jPanel1.add(dateLbl);
        dateLbl.setBounds(1230, 57, 140, 20);

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ijse/gdse37/genius/view/images/admin.png"))); // NOI18N
        jPanel1.add(jLabel9);
        jLabel9.setBounds(1170, 10, 60, 60);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("GENIUS™ ©Dinuka_Kasun_Medis  dinuka.kasunds@gmail.com / 2016");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(990, 720, 350, 20);

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ijse/gdse37/genius/view/images/logo2New.png"))); // NOI18N
        jPanel1.add(jLabel3);
        jLabel3.setBounds(20, 10, 190, 70);

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 190, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel3);
        jPanel3.setBounds(20, 10, 190, 70);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1366, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 743, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logBtnActionPerformed
        try {
            StudentController studentController=ServerConnector.getServerConnector().getStudentController();
            String student_id=userIdTxt.getText();
            Student_Main_Window.studentId=student_id;
            char[] password=passwordTxt.getPassword();
            String s=new String(password);
            byte[] password2=s.getBytes("UTF-8");
            String passwordData=new String(password2);
            boolean isPassword=studentController.isPassword(student_id, Encription.encriptTxt(passwordData));
            if (isPassword) {
                Student student=studentController.searchStudent("student_id", student_id);
                passwordPanel.setVisible(false);
                String []split=student.getName().split(" ");
                userNameLbl.setText(split[0]);
                mainWindowPanel.removeAll();
                mainWindowPanel.add(answeringQuestions);
                mainWindowPanel.repaint();
                mainWindowPanel.revalidate();
                answeringQuestions.setVisible(true);
                addStudentObserver();
            }else{
                JOptionPane.showMessageDialog(this, "Password is wrong..");
            }
        } catch (NotBoundException ex) {
            Logger.getLogger(Student_Main_Window.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(Student_Main_Window.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(Student_Main_Window.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Student_Main_Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_logBtnActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        removeStudentObserver();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Synthetica".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Student_Main_Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Student_Main_Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Student_Main_Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Student_Main_Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Student_Main_Window().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dateLbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton logBtn;
    public static javax.swing.JPanel mainWindowPanel;
    private javax.swing.JPanel passwordPanel;
    private javax.swing.JPasswordField passwordTxt;
    private javax.swing.JLabel timeLbl;
    private javax.swing.JTextField userIdTxt;
    private javax.swing.JLabel userNameLbl;
    // End of variables declaration//GEN-END:variables

    /*Method for set time © Dinuka Kasun Medis*/
    private void setTime(){
        new Thread(){
            @Override
            public void run(){
                while (true) {  
                    try {
                        Date date=new Date();
                        SimpleDateFormat simpleDateFormat=new SimpleDateFormat("hh:mm:ss");
                        SimpleDateFormat simpleDateFormat2=new SimpleDateFormat("yyyy MMMM,dd");
                        timeLbl.setText(simpleDateFormat.format(date));
                        dateLbl.setText(simpleDateFormat2.format(date));
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Student_Main_Window.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                }
            }
        }.start();
    }
      
    /*Method for add student observer © Dinuka Kasun Medis*/
    private void addStudentObserver(){
        try {
            StudentController studentController=ServerConnector.getServerConnector().getStudentController();
            studentObserverImpl=new StudentObserverImpl(this);
            studentController.isAddStudentObserver(studentObserverImpl);
        } catch (NotBoundException ex) {
            Logger.getLogger(Student_Main_Window.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(Student_Main_Window.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(Student_Main_Window.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Student_Main_Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /*Method for remove sudent observer © Dinuka Kasun Medis*/
    protected void removeStudentObserver(){
        try {
            StudentController studentController=ServerConnector.getServerConnector().getStudentController();
            studentObserverImpl=new StudentObserverImpl(this);
            studentController.isRemoveStudentObserver(studentObserverImpl);
        } catch (NotBoundException ex) {
            Logger.getLogger(Student_Main_Window.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(Student_Main_Window.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(Student_Main_Window.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Student_Main_Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /*
     * Method for start exam © Dinuka Kasun Medis
     * @param exam_id
     * @param noOfQuestions
     * @param paper
     * @param examAnswerSheet
     */
    public void update(String exam_id,int noOfQuestions,String paper, ArrayList<ExamAnswerSheet> examAnswerSheet) {
        examPanel=new ExamPanel(exam_id,noOfQuestions,paper);
        mainWindowPanel.removeAll();
        mainWindowPanel.add(examPanel);
        mainWindowPanel.repaint();
        mainWindowPanel.revalidate();
        examPanel.setVisible(true);
    }
}

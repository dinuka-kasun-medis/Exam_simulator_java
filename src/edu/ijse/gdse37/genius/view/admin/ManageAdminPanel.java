/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ijse.gdse37.genius.view.admin;

import edu.ijse.gdse37.genius.connector.ServerConnector;
import edu.ijse.gdse37.genius_common.controllers.AdminController;
import edu.ijse.gdse37.genius_common.controllers.IDController;
import java.io.IOException;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import edu.ijse.gdse37.genius_common.model.Admin;
import edu.ijse.gdse37.genius.observerImpl.AdminObserverImpl;
import edu.ijse.gdse37.genius.view.other.ComboSearch;
import edu.ijse.gdse37.genius.view.other.Encription;
import edu.ijse.gdse37.genius.view.other.Validation;
import java.io.UnsupportedEncodingException;

/**
 *
 * @author Dinuka
 */
public class ManageAdminPanel extends javax.swing.JPanel {

    private AdminObserverImpl adminObserverImpl;
    private ViewAdminList VIEW_ADMIN_LIST;
    private final Admin_Main_Window admin_Main_Window;
    private SpecialLogin specialLogin;

    /**
     * Creates new form ManageAdminPanel
     * @param admin_Main_Window
     */
    public ManageAdminPanel(Admin_Main_Window admin_Main_Window) {
        initComponents();
        loadAdminList();
        this.admin_Main_Window=admin_Main_Window;
        admin_idTxt.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainWindowPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        nicTxt = new javax.swing.JTextField();
        admin_idCOmbo = new javax.swing.JComboBox<>();
        admin_idTxt = new javax.swing.JTextField();
        nameTxt = new javax.swing.JTextField();
        emailTxt = new javax.swing.JTextField();
        telephoneTxt = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        passwordTxt = new javax.swing.JTextField();
        viewBtn = new javax.swing.JButton();
        newAdminBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        VisibleTrue = new javax.swing.JLabel();
        VisibleFalse = new javax.swing.JLabel();

        mainWindowPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainWindowPanel.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("NIC :");
        mainWindowPanel.add(jLabel1);
        jLabel1.setBounds(170, 370, 110, 30);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Admin Id :");
        mainWindowPanel.add(jLabel2);
        jLabel2.setBounds(170, 120, 110, 30);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Name :");
        mainWindowPanel.add(jLabel3);
        jLabel3.setBounds(170, 170, 110, 30);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("Email :");
        mainWindowPanel.add(jLabel4);
        jLabel4.setBounds(170, 220, 110, 30);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Telephone :");
        mainWindowPanel.add(jLabel5);
        jLabel5.setBounds(170, 270, 110, 30);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setText("Password :");
        mainWindowPanel.add(jLabel6);
        jLabel6.setBounds(170, 320, 110, 30);

        nicTxt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        mainWindowPanel.add(nicTxt);
        nicTxt.setBounds(280, 370, 280, 30);

        admin_idCOmbo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        admin_idCOmbo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                admin_idCOmboItemStateChanged(evt);
            }
        });
        mainWindowPanel.add(admin_idCOmbo);
        admin_idCOmbo.setBounds(280, 120, 240, 30);

        admin_idTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        mainWindowPanel.add(admin_idTxt);
        admin_idTxt.setBounds(280, 120, 240, 30);

        nameTxt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        mainWindowPanel.add(nameTxt);
        nameTxt.setBounds(280, 170, 420, 30);

        emailTxt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        mainWindowPanel.add(emailTxt);
        emailTxt.setBounds(280, 220, 370, 30);

        telephoneTxt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        telephoneTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                telephoneTxtKeyReleased(evt);
            }
        });
        mainWindowPanel.add(telephoneTxt);
        telephoneTxt.setBounds(280, 270, 280, 30);

        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });
        passwordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordFieldKeyReleased(evt);
            }
        });
        mainWindowPanel.add(passwordField);
        passwordField.setBounds(280, 320, 270, 30);

        passwordTxt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        mainWindowPanel.add(passwordTxt);
        passwordTxt.setBounds(280, 320, 270, 30);

        viewBtn.setBackground(new java.awt.Color(255, 255, 255));
        viewBtn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        viewBtn.setText("View All");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });
        mainWindowPanel.add(viewBtn);
        viewBtn.setBounds(680, 510, 150, 50);

        newAdminBtn.setBackground(new java.awt.Color(255, 255, 255));
        newAdminBtn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        newAdminBtn.setText("New Admin");
        newAdminBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newAdminBtnActionPerformed(evt);
            }
        });
        mainWindowPanel.add(newAdminBtn);
        newAdminBtn.setBounds(170, 510, 150, 50);

        addBtn.setBackground(new java.awt.Color(255, 255, 255));
        addBtn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        mainWindowPanel.add(addBtn);
        addBtn.setBounds(170, 510, 150, 50);

        updateBtn.setBackground(new java.awt.Color(255, 255, 255));
        updateBtn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        mainWindowPanel.add(updateBtn);
        updateBtn.setBounds(340, 510, 150, 50);

        deleteBtn.setBackground(new java.awt.Color(255, 255, 255));
        deleteBtn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        mainWindowPanel.add(deleteBtn);
        deleteBtn.setBounds(510, 510, 150, 50);

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ijse/gdse37/genius/view/images/logo2New.png"))); // NOI18N
        mainWindowPanel.add(jLabel8);
        jLabel8.setBounds(950, 550, 190, 90);

        VisibleTrue.setBackground(new java.awt.Color(210, 205, 205));
        VisibleTrue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ijse/gdse37/genius/view/images/eye.png"))); // NOI18N
        VisibleTrue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VisibleTrueMouseClicked(evt);
            }
        });
        mainWindowPanel.add(VisibleTrue);
        VisibleTrue.setBounds(570, 330, 20, 30);

        VisibleFalse.setBackground(new java.awt.Color(210, 205, 205));
        VisibleFalse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ijse/gdse37/genius/view/images/eye.png"))); // NOI18N
        VisibleFalse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VisibleFalseMouseClicked(evt);
            }
        });
        mainWindowPanel.add(VisibleFalse);
        VisibleFalse.setBounds(550, 320, 20, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(mainWindowPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1140, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainWindowPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed
        Admin_Main_Window.setBtnDissable();
        VIEW_ADMIN_LIST=new ViewAdminList(admin_Main_Window);
        addAdminObserver();
        Admin_Main_Window.mainWindowPanel.removeAll();
        Admin_Main_Window.mainWindowPanel.add(VIEW_ADMIN_LIST);
        Admin_Main_Window.mainWindowPanel.repaint();
        Admin_Main_Window.mainWindowPanel.revalidate();
        VIEW_ADMIN_LIST.setVisible(true);
    }//GEN-LAST:event_viewBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        try {
            AdminController adminController=ServerConnector.getServerConnector().getAdminController();
            String admin_id=admin_idTxt.getText();
            String name=nameTxt.getText();
            String email=emailTxt.getText();
            int telephone=Integer.parseInt(telephoneTxt.getText());
            String password=Encription.encriptTxt(passwordTxt.getText());
            String nic=nicTxt.getText();
            Admin admin=new Admin(admin_id, name, email, telephone, password, nic);
            boolean isAdded=adminController.isAddAdmin(admin);
            if (isAdded) {
                JOptionPane.showMessageDialog(this, "Admin added sucsess...");
                admin_idCOmbo.setVisible(true);
                newAdminBtn.setVisible(true);
                loadAdminList();
            }else{
                JOptionPane.showMessageDialog(this, "Somthing wrong...admin add");
                admin_idCOmbo.setVisible(true);
                newAdminBtn.setVisible(true);
            }
        } catch (NotBoundException ex) {
            Logger.getLogger(ManageAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(ManageAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ManageAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ManageAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        try {
            specialLogin=new SpecialLogin(admin_Main_Window, true);
            specialLogin.setVisible(true);
            AdminController adminController=ServerConnector.getServerConnector().getAdminController();
            String admin_id=admin_idCOmbo.getSelectedItem().toString();
            String name=nameTxt.getText();
            String email=emailTxt.getText();
            int telephone=Integer.parseInt(telephoneTxt.getText());
            String password=Encription.encriptTxt(passwordTxt.getText());
            String nic=nicTxt.getText();
            Admin admin=new Admin(admin_id, name, email, telephone, password, nic);
            boolean isUpdated=adminController.isUpdateAdmin(admin);
            if (isUpdated) {
                JOptionPane.showMessageDialog(this, admin.getAdmin_id()+" Admin updated sucsess...");
                loadAdminList();
            }else{
                JOptionPane.showMessageDialog(this, "Somthing wrong...admin update");
            }
        } catch (NotBoundException ex) {
            Logger.getLogger(ManageAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(ManageAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ManageAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ManageAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        try {
            specialLogin=new SpecialLogin(admin_Main_Window, true);
            specialLogin.setVisible(true);
            AdminController adminController=ServerConnector.getServerConnector().getAdminController();
            String admin_id=admin_idCOmbo.getSelectedItem().toString();
            boolean isDeleted=adminController.isDeleteAdmin(admin_id);
            if (isDeleted) {
                JOptionPane.showMessageDialog(this, admin_id+" Admin deleted sucsess...");
                loadAdminList();
            }else{
                JOptionPane.showMessageDialog(this, "Somthing wrong...admin delete");
            }
        } catch (NotBoundException ex) {
            Logger.getLogger(ManageAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(ManageAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ManageAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ManageAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void admin_idCOmboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_admin_idCOmboItemStateChanged
        try {
            AdminController adminController=ServerConnector.getServerConnector().getAdminController();
            if (admin_idCOmbo.getSelectedItem()!=null) {
                Admin admin=adminController.searchAdmin("admin_id", admin_idCOmbo.getSelectedItem().toString());
                if (admin!=null) {
                    nameTxt.setText(admin.getName());
                    emailTxt.setText(admin.getEmail());
                    nicTxt.setText(admin.getNic());
                    telephoneTxt.setText(Integer.toString(admin.getTelephone()));
                    passwordTxt.setText(Encription.decriptTxt(admin.getPassword()));
                    passwordField.setText(Encription.decriptTxt(admin.getPassword()));
                }else{
                    JOptionPane.showMessageDialog(this, "Somthing wrong..admin combo");
                }
            }else{
                //Do nothing..
            }
        } catch (NotBoundException ex) {
            Logger.getLogger(ManageAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(ManageAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ManageAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ManageAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_admin_idCOmboItemStateChanged

    private void newAdminBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newAdminBtnActionPerformed
        try {
            admin_idCOmbo.setVisible(false);
            newAdminBtn.setVisible(false);
            admin_idTxt.setVisible(true);
            IDController iDController=ServerConnector.getServerConnector().getIDController();
            String newId=iDController.getLastId("Admin");
            admin_idTxt.setText(newId);
            setTxtFree();
        } catch (NotBoundException ex) {
            Logger.getLogger(ManageAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(ManageAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ManageAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ManageAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_newAdminBtnActionPerformed

    private void telephoneTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_telephoneTxtKeyReleased
        Validation.phoneNumber(telephoneTxt);
    }//GEN-LAST:event_telephoneTxtKeyReleased

    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordFieldActionPerformed

    private void passwordFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordFieldKeyReleased
        passwordTxt.setText(passwordConverter());
    }//GEN-LAST:event_passwordFieldKeyReleased

    private void VisibleTrueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VisibleTrueMouseClicked
        VisibleTrue.setVisible(false);
        passwordTxt.setVisible(true);
        passwordField.setVisible(false);
        VisibleFalse.setVisible(true);
    }//GEN-LAST:event_VisibleTrueMouseClicked

    private void VisibleFalseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VisibleFalseMouseClicked
        VisibleFalse.setVisible(false);
        passwordTxt.setVisible(false);
        passwordField.setVisible(true);
        VisibleTrue.setVisible(true);
    }//GEN-LAST:event_VisibleFalseMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel VisibleFalse;
    private javax.swing.JLabel VisibleTrue;
    private javax.swing.JButton addBtn;
    private javax.swing.JComboBox<String> admin_idCOmbo;
    private javax.swing.JTextField admin_idTxt;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField emailTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel mainWindowPanel;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JButton newAdminBtn;
    private javax.swing.JTextField nicTxt;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField passwordTxt;
    private javax.swing.JTextField telephoneTxt;
    private javax.swing.JButton updateBtn;
    private javax.swing.JButton viewBtn;
    // End of variables declaration//GEN-END:variables

    /*Method for load admin Id to combo © Dinuka Kasun Medis*/
    private void loadAdminList(){
        try {
            admin_idCOmbo.removeAllItems();
            AdminController adminController=ServerConnector.getServerConnector().getAdminController();
            ArrayList<Admin> adminList=adminController.getAllAdmin();
            for (Admin admin : adminList) {
                admin_idCOmbo.addItem(admin.getAdmin_id());
            }
            new ComboSearch().setSearchableCombo(admin_idCOmbo, true, "No Admin found");
        } catch (NotBoundException ex) {
            Logger.getLogger(ManageAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(ManageAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ManageAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ManageAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /*Method for add admin observer © Dinuka Kasun Medis*/
    public void addAdminObserver(){
        try {
            AdminController adminController=ServerConnector.getServerConnector().getAdminController();
            adminObserverImpl=new AdminObserverImpl(admin_Main_Window);
            adminController.isAddAdminObserver(adminObserverImpl);
        } catch (NotBoundException ex) {
            Logger.getLogger(ViewAdminList.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(ViewAdminList.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ViewAdminList.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ViewAdminList.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /*Method for free all txt fields © Dinuka Kasun Medis*/
    private void setTxtFree(){
        nameTxt.setText("");
        emailTxt.setText("");
        telephoneTxt.setText("");
        passwordTxt.setText("");
        nicTxt.setText("");
    }
    
    /*Method for password to text © Dinuka Kasun Medis*/
    private String passwordConverter() {
        String passwordData = null;
        try {
            char[] password = passwordField.getPassword();
            String s = new String(password);
            byte[] password2 = s.getBytes("UTF-8");
            passwordData = new String(password2);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(ManageStudentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        return passwordData;
    }
}

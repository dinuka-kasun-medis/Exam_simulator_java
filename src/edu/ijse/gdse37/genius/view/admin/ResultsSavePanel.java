/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ijse.gdse37.genius.view.admin;

import edu.ijse.gdse37.genius.connector.ServerConnector;
import edu.ijse.gdse37.genius_common.controllers.ResultController;
import edu.ijse.gdse37.genius_common.controllers.StudentController;
import edu.ijse.gdse37.genius_common.model.Result;
import edu.ijse.gdse37.genius_common.model.Student;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.TreeSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Dinuka
 */
public class ResultsSavePanel extends javax.swing.JPanel {

    private static ArrayList<String> resultList = new ArrayList<>();
    private static TreeSet<String> tree = new TreeSet<>();
    private String date1;
    private int noOfQuestions;

    /**
     * Creates new form ResultsSavePanel
     */
    public ResultsSavePanel() {
        initComponents();
        setDate();
        addResultsTbl();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainWindowPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        excelBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        exam_idTxt = new javax.swing.JLabel();
        unitTxt = new javax.swing.JLabel();
        subjectTxt = new javax.swing.JLabel();

        mainWindowPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainWindowPanel.setLayout(null);

        resultTable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        resultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student ID", "Student Name", "Results"
            }
        ));
        resultTable.setRowHeight(30);
        jScrollPane1.setViewportView(resultTable);

        mainWindowPanel.add(jScrollPane1);
        jScrollPane1.setBounds(20, 70, 1100, 490);

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ijse/gdse37/genius/view/images/logo2New.png"))); // NOI18N
        mainWindowPanel.add(jLabel1);
        jLabel1.setBounds(950, 550, 190, 90);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Exam  :");
        mainWindowPanel.add(jLabel3);
        jLabel3.setBounds(30, 20, 90, 30);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("Unite :");
        mainWindowPanel.add(jLabel4);
        jLabel4.setBounds(700, 20, 90, 30);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Subject :");
        mainWindowPanel.add(jLabel5);
        jLabel5.setBounds(360, 20, 90, 30);

        excelBtn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        excelBtn.setText("Get Excel Copy");
        excelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excelBtnActionPerformed(evt);
            }
        });
        mainWindowPanel.add(excelBtn);
        excelBtn.setBounds(20, 580, 220, 40);

        saveBtn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        mainWindowPanel.add(saveBtn);
        saveBtn.setBounds(260, 580, 220, 40);

        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton1.setText("Reload");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        mainWindowPanel.add(jButton1);
        jButton1.setBounds(490, 580, 200, 40);

        exam_idTxt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        exam_idTxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        mainWindowPanel.add(exam_idTxt);
        exam_idTxt.setBounds(100, 20, 190, 30);

        unitTxt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        unitTxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        mainWindowPanel.add(unitTxt);
        unitTxt.setBounds(760, 20, 240, 30);

        subjectTxt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        subjectTxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        mainWindowPanel.add(subjectTxt);
        subjectTxt.setBounds(440, 20, 240, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainWindowPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1140, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainWindowPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void excelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excelBtnActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Xcel", "xsl");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                JOptionPane.showMessageDialog(this, chooser.getSelectedFile().getAbsolutePath().replace("\\", "\\\\"));
                File file = new File(chooser.getSelectedFile().getAbsolutePath().replace("\\", "\\\\") + ".xls");
                exportTable(resultTable, file);
            } catch (IOException ex) {
                Logger.getLogger(ResultsPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_excelBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        Result result;
        Iterator iterator;
        iterator = tree.iterator();
        while (iterator.hasNext()) {
            String string = iterator.next().toString();
            try {
                String[] split = string.split(":");
                ResultController resultController = ServerConnector.getServerConnector().getResultController();
                result = new Result(Admin_Main_Window.exam_id, date1, split[0], Double.parseDouble(split[1]));
                resultController.isAddResult(result);
            } catch (NotBoundException ex) {
                Logger.getLogger(ResultsSavePanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (MalformedURLException ex) {
                Logger.getLogger(ResultsSavePanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (RemoteException ex) {
                Logger.getLogger(ResultsSavePanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(ResultsSavePanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        noOfQuestions = Admin_Main_Window.noOfQuestions;
        addResultsTbl();
        exam_idTxt.setText(Admin_Main_Window.exam_id);
        subjectTxt.setText(Admin_Main_Window.subject);
        unitTxt.setText(Admin_Main_Window.unite);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel exam_idTxt;
    private javax.swing.JButton excelBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainWindowPanel;
    private javax.swing.JTable resultTable;
    private javax.swing.JButton saveBtn;
    private javax.swing.JLabel subjectTxt;
    private javax.swing.JLabel unitTxt;
    // End of variables declaration//GEN-END:variables

    /*Method for export table data to an Excel sheet © Dinuka Kasun Medis*/
    private void exportTable(JTable table, File file1) throws IOException {
        TableModel model = table.getModel();
        File file = file1;
        FileWriter out = new FileWriter(file);
        for (int i = 0; i < model.getColumnCount(); i++) {
            out.write(model.getColumnName(i) + "\t");
        }
        out.write("\n");
        for (int i = 0; i < model.getRowCount(); i++) {
            for (int j = 0; j < model.getColumnCount(); j++) {
                out.write(model.getValueAt(i, j).toString() + "\t");
            }
            out.write("\n");
        }
        out.close();
    }

    /*Method for add results to array List © Dinuka Kasun Medis*/
    /**
     *
     * @param results
     */
    public static void addResults(String results) {
//        resultList.add(results);
        tree.add(results);
    }

    /*Method for add data to table © Dinuka Kasun Medis*/
    private void addResultsTbl() {
        try {
            StudentController studentController = ServerConnector.getServerConnector().getStudentController();
            DefaultTableModel dtm = (DefaultTableModel) resultTable.getModel();
            dtm.setRowCount(0);
            Iterator iterator;
            iterator = tree.iterator();
            while (iterator.hasNext()) {
                String string = iterator.next().toString();
                String[] split = string.split(":");
                Student student = studentController.searchStudent("student_id", split[0]);
                //double precentage = (Double.parseDouble(split[1]) * 100)/noOfQuestions;
                Object[] data = {split[0], student.getName(), split[1] + "%"};
                dtm.addRow(data);
            }
        } catch (NotBoundException ex) {
            Logger.getLogger(ResultsSavePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(ResultsSavePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ResultsSavePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ResultsSavePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setDate() {
        Date date = new Date();
        SimpleDateFormat simpleDateFormat2 = new SimpleDateFormat("yyyy-MM-dd");
        date1 = simpleDateFormat2.format(date);

    }
}
